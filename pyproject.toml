[build-system]
requires = ['setuptools >= 61.0.0']
build-backend = 'setuptools.build_meta'

[project]
name = 'hipsta'
description = 'A python package for hippocampal shape and thickness analysis'
license = {file = 'LICENSE'}
requires-python = '>=3.8'
authors = [
    {name = 'Kersten Diers', email = 'kersten.diers@dzne.de'},
    {name = 'Martin Reuter', email = 'martin.reuter@dzne.de'}
]
maintainers = [
    {name = 'Kersten Diers', email = 'kersten.diers@dzne.de'},
    {name = 'Martin Reuter', email = 'martin.reuter@dzne.de'}
]
keywords = [
    'hippocampus',
    'shape',
    'thickness',
    'geometry',
]
classifiers = [
    'Operating System :: Unix',
    'Operating System :: MacOS',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Natural Language :: English',
    'License :: OSI Approved :: MIT License',
    'Intended Audience :: Science/Research',
]
dynamic = ["version", "readme", "dependencies"]

[project.optional-dependencies]
build = [
    'build',
    'twine',
]
doc = [
    'furo!=2023.8.17',
    'matplotlib',
    'memory-profiler',
    'numpydoc',
    'sphinx!=7.2.*',
    'sphinxcontrib-bibtex',
    'sphinx-copybutton',
    'sphinx-design',
    'sphinx-gallery',
    'sphinx-issues',
    'myst-parser',
    'pypandoc',
    'nbsphinx',
    'IPython', # For syntax highlighting in notebooks
    'ipykernel',
]
style = [
    'bibclean',
    'black',
    'codespell',
    'isort',
    'pydocstyle[toml]',
    'ruff',
]
test = [
    'pytest',
    'pytest-cov',
    'pytest-timeout',
]
all = [
    'hipsta[doc]',
    'hipsta[build]',
    'hipsta[style]',
]
full = [
    'hipsta[all]',
]

[project.urls]
homepage = 'https://github.com/Deep-MI/Hipsta'
documentation = 'https://github.com/Deep-MI/Hipsta'
source = 'https://github.com/Deep-MI/Hipsta'
tracker = 'https://github.com/Deep-MI/Hipsta/issues'

[project.scripts]
run_hipsta = 'hipsta.cli:main'

[tool.setuptools.dynamic]
version = {file = 'VERSION'}
readme = {file = 'README.md', content-type = "text/markdown"}
dependencies = {file = 'requirements.txt'}

[tool.setuptools.packages.find]
include = ['hipsta*']
exclude = ['docker', 'singularity']

[tool.setuptools.package-data]
"hipsta.doc" = ["*.md"]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
      __pycache__
    | \.github
    | setup.py
)
'''

[tool.isort]
profile = 'black'
multi_line_output = 3
line_length = 120
py_version = 38
extend_skip_glob = [
    'setup.py',
    'data/*',
    'examples/*',
]

[tool.pydocstyle]
convention = 'numpy'
ignore-decorators = '(copy_doc|property|.*setter|.*getter|pyqtSlot|Slot)'
match = '^(?!setup|__init__|test_).*\.py'
match-dir = '^fsqc.*'
add_ignore = 'D100,D104,D107'

[tool.ruff]
line-length = 120
extend-exclude = [
    "doc",
    "setup.py",
]
ignore = ["E501", "F841"] # line too long (black will do that), variable assigned but not used (useful for debugging, future development)

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]


[tool.pytest.ini_options]
minversion = '6.0'
filterwarnings = []
addopts = [
    "--import-mode=importlib",
#    "--junit-xml=junit-results.xml",
#    "--durations=20",
#    "--verbose",
]
